name: Build & Deploy Demo Project(dev)

on:
  workflow_dispatch:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]


env:
    REPO_NAME: ${{ github.repository }}
    REPO_NAME_ONLY: ${{ github.repository }} # Stores the full repository name      

permissions:
   id-token: write
   contents: read
   actions: read

jobs:

  build-image:

    runs-on: ubuntu-latest
    environment: Development

    steps:

    - name: Extract and Set Repository Name Only
      run: |
        echo "REPO_NAME_ONLY=$(echo $REPO_NAME | cut -d'/' -f2)" >> $GITHUB_ENV        

    #Set the image tag with current date and time
    - name: Set IMAGE_TAG variable
      id: tag
      run: echo "IMAGE_TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - uses: actions/checkout@v4

    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag ghcr.io/${{ vars.ORG_NAME }}${{ env.REPO_NAME_ONLY }}:${{ env.IMAGE_TAG }}
        docker tag ghcr.io/${{ vars.ORG_NAME }}${{ env.REPO_NAME_ONLY }}:${{ env.IMAGE_TAG }} ghcr.io/${{ vars.ORG_NAME }}${{ env.REPO_NAME_ONLY }}:latest


    # Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
       registry: ghcr.io
       username: ${{ github.actor }}
       password: ${{ secrets.ORG_PAT }}

   # Push the Docker image
    - name: Push Docker image
      run: |
       docker push ghcr.io/${{ vars.ORG_NAME }}/${{ env.REPO_NAME_ONLY }}:latest
       docker push ghcr.io/${{ vars.ORG_NAME }}/${{ env.REPO_NAME_ONLY }}:${{ env.IMAGE_TAG }}


  deploy:
    needs: build-image
    runs-on: ubuntu-latest
    environment: Development

    steps:
    - uses: actions/checkout@v4
    
     # Logs in with your Azure credentials
    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Use kubelogin to configure your kubeconfig for Azure auth
    - name: Set up kubelogin for non-interactive login
      uses: azure/use-kubelogin@v1
      with:
       kubelogin-version: 'v0.0.25'

    # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
    - name: Get K8s context
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ vars.RESOURCE_GROUP }}
        cluster-name: ${{ vars.CLUSTER_NAME }}
        admin: 'false'
        use-kubelogin: 'true'

    
    # Runs Kustomize to create manifest files
    - name: Bake deployment
      uses: azure/k8s-bake@v3
      with:
        renderEngine: "kustomize"
        kustomizationPath: ${{ vars.KUSTOMIZE_PATH }}
        kubectl-version: latest
      id: bake

    # Deploys application based on manifest files from previous step
    - name: Deploy application
      uses: Azure/k8s-deploy@v4
      with:
        action: deploy
        namespace: bcp-dev
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        images: |
          ghcr.io/${{ vars.ORG_NAME }}/${{ env.REPO_NAME_ONLY }}:latest